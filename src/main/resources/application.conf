example-akka-http {
  interface = "0.0.0.0"
  port = 8080
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]

  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "DEBUG"

  log-dead-letters = 10

  # During system shutdown it is likely that you see dead letters,
  # since pending messages in the actor mailboxes are sent to dead letters.
  log-dead-letters-during-shutdown = on

  # Log the complete configuration at INFO level when the actor system is started.
  # This is useful when you are uncertain of what configuration is used.
  log-config-on-start = off

  actor {
    debug {
      # enable function of LoggingReceive, which is to log any received message at
      receive = off
      # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill et.c.)
      autoreceive = off
      # enable DEBUG logging of actor lifecycle changes
      lifecycle = off
      # enable DEBUG logging of all LoggingFSMs for events, transitions and timers
      fsm = off
      # enable DEBUG logging of subscription changes on the eventStream
      event-stream = off
    }

    default-dispatcher {
      # Dispatcher is the name of the event-based dispatcher
      type = Dispatcher
      # What kind of ExecutionService to use
      executor = "thread-pool-executor"
      # Configuration for the fork join pool
      thread-pool-executor {
        # minimum number of threads to cap factor-based core number to
        core-pool-size-min = 2
        # No of core threads ... ceil(available processors * factor)
        core-pool-size-factor = 2.0
        # maximum number of threads to cap factor-based number to
        core-pool-size-max = 8
      }
      # Throughput defines the maximum number of messages to be
      # processed per actor before the thread jumps to the next actor.
      # Set to 1 for as fair as possible.
      throughput = 100
    }

    bounded-mailbox {
      mailbox-type = "akka.dispatch.BoundedMailbox"
      mailbox-capacity = 10
      mailbox-push-timeout-time = 0
    }

    deployment {
      /hello-service {
        mailbox = akka.actor.bounded-mailbox
      }
    }
  }

  http {
    idle-timeout = 10 s
  }
}

kamon {
  metric {

    # Time interval for collecting all metrics and send the snapshots to all subscribed actors.
    tick-interval = 10 seconds

    filters {
      trace {
        includes = ["**"]
      }

      akka-actor {
        includes = ["example-akka-http/user/hello-service"]
      }

      akka-dispatcher {
        includes = ["example-akka-http/*.default-dispatcher"]
      }
    }
  }
}
